/*
 * The ini file is run when run debug.
 * It will setup ICE connection, and PATCH related registers.
 * 
 * In both CPU, it needs to setup APS and MSQ PATCH registers
 * because when ICE connect to CPU, it will trigger system reset,
 * then PATCH registers are reset.
 * We need to setup PATCH regsiter both side in order to make sure
 * the registers are properly set.
 */
LOAD "..\\..\\targets\\opl2500\\Output\\Objects\\opl2500_rom_aps.axf" NOCODE
INCLUDE "keil_ini_files\\patch_setup.ini"

FUNC void ConnectICE (void) {
    _WWORD(0xE000EDF0, 0xA05F0003);
    _WWORD(0xE000EDFC, 0x01000001);
    _WWORD(0xE000ED0C, 0x05FA0001);
}
FUNC void ICEUnhook (void) {
    _WWORD(0xE000EDFC, 0);
}


FUNC void Setup (void) {
    exec("LOAD %L INCREMENTAL");
    PatchInit();
    
    PatchApsSet(0x00008000, 0xB228F00A);
        /* @0x8000  [0A F0 28 B2]   B #0x412454
         * 0x412454 is the address as defined in scatter file */
    

    /* Load from KEIL and skip flash loading */
    PatchApsSet(0x00002BCC, 0x0000E00C);
        /*  From     if(Boot_CheckUartBehavior() == 0) [boot_sequence.c:1058 @0x2BCC]
         *  Jump to  Boot_BeforeApplyPatch()           [boot_sequence.c:1065 @0x2BE8]
         *  Target thumb: 0CE0 */
    PatchApsSet(0x00007a30, 0xE0077008);
        /*  From     0x00007a32
         *  Jump to  0x00007a44
         *  Target thumb: 07E0 */
    
    
    /* ********** MSQ ****************** */
    PatchMsqSet(0x00004000, 0x47384F00); 
    PatchMsqSet(0x00004004, 0x0060B239); 
}

FUNC void OnResetExec (void)  {         // executes upon software RESET
    ConnectICE();
    Setup();                            // Setup for Running
    _WDWORD(0x40001128, _RDWORD(0x40001128));
}

_WWORD(0x4000110C, _RWORD(0x4000110C) & (1 << 3));
reset
Setup();  // Get ready to execute image in SRAM or whatever region it is in
